# *** WARNING ***
# This file is automatically generated by build.yml.
# Changes made to this file may be overwritten.
# after installed use that way:
# docker network create --driver=nuage --ipam-driver=nuage-ipam --ipam-opt organization=ACME_Corp --ipam-opt domain=DC_domain --ipam-opt zone=DataCenter --ipam-opt subnet="Containers" --ipam-opt user=admin --subnet=192.1.60.0/24 --gateway=192.1.60.1 MyNuageNet
# docker network ls
# docker run -d -it --net MyNuageNet nginx /bin/bash

- hosts: docker[1-2].nuage521.lab
  remote_user: centos
  become: true
  become_method: sudo
  gather_facts: no
  
  tasks:
  
    - name: Pull facts on hypervisor
      action: setup
      remote_user: root
    
    - name: Install epel-release repo
      yum: name=epel-release state=present
      remote_user: root
    
    - name: yum updates
      yum: name=* state=latest
      remote_user: root

    - name: Install additional packages
      yum: name={{ item }} state=present
      with_items:
       - git
       - go
       - vim
      remote_user: root

    - name: Disabling selinux
      selinux:
        state: disabled
      remote_user: root

    - name: Install additional packages
      yum: name={{ item }} state=present
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
      remote_user: root

    - name: Install docker-ce-stable yum repo
      yum_repository:
        name: "docker-ce-stable"
        description: "Docker CE Stable - $basearch"
        baseurl: "https://download.docker.com/linux/centos/7/$basearch/stable"
        gpgkey: "https://download.docker.com/linux/centos/gpg"
        gpgcheck: yes
        state: present
      remote_user: root

    - name: Ensure the yum package index is up to Date
      yum:
        update_cache: yes
        name: '*'
        state: latest
      remote_user: root

    - name: Install docker-ce packages
      yum: name=docker-ce state=present
      remote_user: root

    - file:
        path: /etc/docker
        state: directory
      remote_user: root

    - name: create /etc/docker/daemon.json
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
      remote_user: root

    - name: Check docker service is running
      service:
        name: docker
        state: started
      remote_user: root
    
    - name: Remove  additional packages
      yum: name={{ item }} state=absent
      with_items:
       - python-openvswitch
       - openvswitch
      remote_user: root

    - name: Copy rpm  from url for openvswitch
      get_url:
        url: "{{ files_location }}{{ nuage_vrs_rpm_location }}"
        dest: "/tmp/openvswitch.rpm"
      remote_user: root
    
    - name: install the nuage vrs openvswitch rpm from a remote repo
      yum:
        name: '/tmp/openvswitch.rpm'
        state: present
      remote_user: root

    - name: Add ACTIVE_CONTROLLER to /etc/default/openvswitch
      lineinfile:
        dest: /etc/default/openvswitch
        regexp: 'NETWORK_UPLINK_INTF='
        line: "NETWORK_UPLINK_INTF=eth0"
      remote_user: root

    - name: Add ACTIVE_CONTROLLER to /etc/default/openvswitch
      lineinfile:
        dest: /etc/default/openvswitch
        regexp: 'ACTIVE_CONTROLLER='
        line: "ACTIVE_CONTROLLER={{ hostvars[groups['vsc'][2]].interfaces[1].ip }}"
      remote_user: root
    
    - name: Add STANDBY_CONTROLLER to /etc/default/openvswitch
      lineinfile:
        dest: /etc/default/openvswitch
        regexp: 'STANDBY_CONTROLLER='
        line: "STANDBY_CONTROLLER={{ hostvars[groups['vsc'][3]].interfaces[1].ip }}"
      remote_user: root
    
    - name : restarting openvswitch
      service:
        name: openvswitch
        state: restarted
      remote_user: root

# Installing docker and nuage related components

    - name: Copy rpm  from url for libnetwork
      get_url:
        url: "{{ files_location }}{{ nuage_libnetwork_rpm_location }}"
        dest: "/tmp/libnetwork.rpm"
      remote_user: root
    
    - name: install libnetwork-nuage rpm from a remote repo
      yum:
        name: '/tmp/libnetwork.rpm'
        state: present
      remote_user: root

    - name: Update url /etc/default/libnetwork-nuage.yaml
      lineinfile:
        dest: /etc/default/nuage-libnetwork.yaml
        regexp: 'url:'
        line: "url: https://{{ hostvars[groups['vsd'][0]].interfaces[0].ip }}:8443"
        state: present
      remote_user: root

    - name: Update scope /etc/default/libnetwork-nuage.yaml
      lineinfile:
        dest: /etc/default/nuage-libnetwork.yaml
        regexp: 'scope:'
        line: 'scope: "global"'
        state: present
      remote_user: root
    
    - name : restarting libnetwork-nuage
      service:
        name: nuage-libnetwork
        state: restarted
      remote_user: root

    - file:
        path: /etc/systemd/system/docker.service.d
        state: directory
      remote_user: root

    - name: create /etc/systemd/system/docker.service.d/docker.conf
      template:
        src: docker.conf.j2
        dest: /etc/systemd/system/docker.service.d/docker.conf
      remote_user: root

    - name: create /etc/init.d/ovs-restart
      template:
        src: ovs-restart.j2
        dest: /etc/init.d/ovs-restart
        mode: '0755'
      remote_user: root

    - name: enabling ovs-restart script at boot
      shell: 'chkconfig ovs-restart on'
      remote_user: root

    - name: create /usr/lib/systemd/system/docker.socket
      template:
        src: docker.socket.j2
        dest: /usr/lib/systemd/system/docker.socket
      remote_user: root

    - name: rebooting
      command: /sbin/shutdown -r +1
      async: 0
      poll: 0
      ignore_errors: true
      remote_user: root




